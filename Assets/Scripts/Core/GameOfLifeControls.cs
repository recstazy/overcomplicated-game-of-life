//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/GameOfLifeControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace GameOfLife.Input
{
    public partial class @GameOfLifeControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GameOfLifeControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameOfLifeControls"",
    ""maps"": [
        {
            ""name"": ""GameOfLifeGame"",
            ""id"": ""897bce75-4fe5-48d8-a7ae-e449f9577425"",
            ""actions"": [
                {
                    ""name"": ""HoldAddCells"",
                    ""type"": ""Button"",
                    ""id"": ""599608e8-760e-45e2-a9f1-1de98ce9db53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(pressPoint=0.5)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoldRemoveCells"",
                    ""type"": ""Button"",
                    ""id"": ""861a38c9-f582-4bab-8fe2-b35b9deaffeb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(pressPoint=0.5)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""eb0105bb-6e50-4bfc-aaa2-66d1e75a5a3f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayPauseSimulation"",
                    ""type"": ""Button"",
                    ""id"": ""24ea354d-ae30-4baf-aea8-d340f7082d3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetSimulation"",
                    ""type"": ""Button"",
                    ""id"": ""d2b5c328-f1a5-46fe-9015-75a848ca3afc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""01137a14-ac3b-48b4-be7e-77b1e8ad05d0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldAddCells"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1091f3bb-bece-4413-9a03-f868b481ce95"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b8b6165-5d1d-49f9-8d84-23a7833ec5bc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayPauseSimulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66310a98-9ee1-4714-baaa-b7808feab1d7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetSimulation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9140d048-25ad-4876-90fc-6ca15541d924"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldRemoveCells"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // GameOfLifeGame
            m_GameOfLifeGame = asset.FindActionMap("GameOfLifeGame", throwIfNotFound: true);
            m_GameOfLifeGame_HoldAddCells = m_GameOfLifeGame.FindAction("HoldAddCells", throwIfNotFound: true);
            m_GameOfLifeGame_HoldRemoveCells = m_GameOfLifeGame.FindAction("HoldRemoveCells", throwIfNotFound: true);
            m_GameOfLifeGame_PointerPosition = m_GameOfLifeGame.FindAction("PointerPosition", throwIfNotFound: true);
            m_GameOfLifeGame_PlayPauseSimulation = m_GameOfLifeGame.FindAction("PlayPauseSimulation", throwIfNotFound: true);
            m_GameOfLifeGame_ResetSimulation = m_GameOfLifeGame.FindAction("ResetSimulation", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GameOfLifeGame
        private readonly InputActionMap m_GameOfLifeGame;
        private IGameOfLifeGameActions m_GameOfLifeGameActionsCallbackInterface;
        private readonly InputAction m_GameOfLifeGame_HoldAddCells;
        private readonly InputAction m_GameOfLifeGame_HoldRemoveCells;
        private readonly InputAction m_GameOfLifeGame_PointerPosition;
        private readonly InputAction m_GameOfLifeGame_PlayPauseSimulation;
        private readonly InputAction m_GameOfLifeGame_ResetSimulation;
        public struct GameOfLifeGameActions
        {
            private @GameOfLifeControls m_Wrapper;
            public GameOfLifeGameActions(@GameOfLifeControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @HoldAddCells => m_Wrapper.m_GameOfLifeGame_HoldAddCells;
            public InputAction @HoldRemoveCells => m_Wrapper.m_GameOfLifeGame_HoldRemoveCells;
            public InputAction @PointerPosition => m_Wrapper.m_GameOfLifeGame_PointerPosition;
            public InputAction @PlayPauseSimulation => m_Wrapper.m_GameOfLifeGame_PlayPauseSimulation;
            public InputAction @ResetSimulation => m_Wrapper.m_GameOfLifeGame_ResetSimulation;
            public InputActionMap Get() { return m_Wrapper.m_GameOfLifeGame; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameOfLifeGameActions set) { return set.Get(); }
            public void SetCallbacks(IGameOfLifeGameActions instance)
            {
                if (m_Wrapper.m_GameOfLifeGameActionsCallbackInterface != null)
                {
                    @HoldAddCells.started -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnHoldAddCells;
                    @HoldAddCells.performed -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnHoldAddCells;
                    @HoldAddCells.canceled -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnHoldAddCells;
                    @HoldRemoveCells.started -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnHoldRemoveCells;
                    @HoldRemoveCells.performed -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnHoldRemoveCells;
                    @HoldRemoveCells.canceled -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnHoldRemoveCells;
                    @PointerPosition.started -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnPointerPosition;
                    @PointerPosition.performed -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnPointerPosition;
                    @PointerPosition.canceled -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnPointerPosition;
                    @PlayPauseSimulation.started -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnPlayPauseSimulation;
                    @PlayPauseSimulation.performed -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnPlayPauseSimulation;
                    @PlayPauseSimulation.canceled -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnPlayPauseSimulation;
                    @ResetSimulation.started -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnResetSimulation;
                    @ResetSimulation.performed -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnResetSimulation;
                    @ResetSimulation.canceled -= m_Wrapper.m_GameOfLifeGameActionsCallbackInterface.OnResetSimulation;
                }
                m_Wrapper.m_GameOfLifeGameActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @HoldAddCells.started += instance.OnHoldAddCells;
                    @HoldAddCells.performed += instance.OnHoldAddCells;
                    @HoldAddCells.canceled += instance.OnHoldAddCells;
                    @HoldRemoveCells.started += instance.OnHoldRemoveCells;
                    @HoldRemoveCells.performed += instance.OnHoldRemoveCells;
                    @HoldRemoveCells.canceled += instance.OnHoldRemoveCells;
                    @PointerPosition.started += instance.OnPointerPosition;
                    @PointerPosition.performed += instance.OnPointerPosition;
                    @PointerPosition.canceled += instance.OnPointerPosition;
                    @PlayPauseSimulation.started += instance.OnPlayPauseSimulation;
                    @PlayPauseSimulation.performed += instance.OnPlayPauseSimulation;
                    @PlayPauseSimulation.canceled += instance.OnPlayPauseSimulation;
                    @ResetSimulation.started += instance.OnResetSimulation;
                    @ResetSimulation.performed += instance.OnResetSimulation;
                    @ResetSimulation.canceled += instance.OnResetSimulation;
                }
            }
        }
        public GameOfLifeGameActions @GameOfLifeGame => new GameOfLifeGameActions(this);
        public interface IGameOfLifeGameActions
        {
            void OnHoldAddCells(InputAction.CallbackContext context);
            void OnHoldRemoveCells(InputAction.CallbackContext context);
            void OnPointerPosition(InputAction.CallbackContext context);
            void OnPlayPauseSimulation(InputAction.CallbackContext context);
            void OnResetSimulation(InputAction.CallbackContext context);
        }
    }
}
